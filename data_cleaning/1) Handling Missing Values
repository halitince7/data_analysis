{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":21688,"sourceType":"datasetVersion","datasetId":16432}],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/exercise-handling-missing-values-076fd136-06b0-438f-9cdc-e5ab27826aea.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240219/auto/storage/goog4_request&X-Goog-Date=20240219T110344Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=3669af6301a1fcfa139b93c5cc01eeb9432dc26ac98ae73d97ed3678755d4bde178e3ebc05507ec0e6b65458aea6275e7a61c24ae67e0510fb9997d9250b1c66f744886f293101a7349ee20dcb01aa212b3335a04cf10742130ec53799e7faa8da42ae056105dff7359c569933214949a72fd94872b75afb08dc9b84e1c6a38c47ca91a5869c61ad610813d19294c4ab4cb40d23946b0c03435f1e0babee554dfe47052413fc1720ac3482bac6eecd6aacef683d4fdc1ebfb4657ce6b199680d8acae4dffc130fedf229ee53b28da38e7909ce08db6d02a9a0b9867979d768338cf2aab4a5ce34664e2b4ff1011d2fa403af4ebf4bee0f9563542b2c90412845","timestamp":1708340635585}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tBmLcecVD5VA","executionInfo":{"status":"ok","timestamp":1708341078410,"user_tz":-180,"elapsed":28786,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}},"outputId":"220aabc7-d6f0-48a5-c605-7fbac95b8f7c"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# 1) Take a first look at the data\n","\n","Run the next code cell to load in the libraries and dataset you'll use to complete the exercise."],"metadata":{"id":"vkPW9PFZCU1L"}},{"cell_type":"code","source":["# modules we'll use\n","import pandas as pd\n","import numpy as np\n","\n","# read in all our data\n","sf_permits = pd.read_csv(\"/content/drive/MyDrive/github_repos/data_analysis/data_cleaning/datasets/Building_Permits.csv\")\n","\n","# set seed for reproducibility\n","np.random.seed(0)"],"metadata":{"execution":{"iopub.status.busy":"2024-02-16T11:45:09.574651Z","iopub.execute_input":"2024-02-16T11:45:09.575109Z","iopub.status.idle":"2024-02-16T11:45:12.202807Z","shell.execute_reply.started":"2024-02-16T11:45:09.575077Z","shell.execute_reply":"2024-02-16T11:45:12.201668Z"},"trusted":true,"id":"tfl5lG7YCU1L","outputId":"04820b3f-9960-47dc-963b-9dfc6fad7821","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708341165230,"user_tz":-180,"elapsed":4071,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}}},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-2-e0638618a01b>:6: DtypeWarning: Columns (22,32) have mixed types. Specify dtype option on import or set low_memory=False.\n","  sf_permits = pd.read_csv(\"/content/drive/MyDrive/github_repos/data_analysis/data_cleaning/datasets/Building_Permits.csv\")\n"]}]},{"cell_type":"markdown","source":["Use the code cell below to print the first five rows of the `sf_permits` DataFrame."],"metadata":{"id":"RRfr_qMeCU1M"}},{"cell_type":"code","source":["# TODO: Your code here!\n","sf_permits.head()"],"metadata":{"execution":{"iopub.status.busy":"2024-02-16T11:45:32.585695Z","iopub.execute_input":"2024-02-16T11:45:32.586477Z","iopub.status.idle":"2024-02-16T11:45:32.627681Z","shell.execute_reply.started":"2024-02-16T11:45:32.586434Z","shell.execute_reply":"2024-02-16T11:45:32.625987Z"},"trusted":true,"id":"ieToT4CNCU1N","outputId":"a2485302-fe82-4f99-e526-953d4d72e2fa","colab":{"base_uri":"https://localhost:8080/","height":429},"executionInfo":{"status":"ok","timestamp":1708341176697,"user_tz":-180,"elapsed":309,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}}},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Permit Number  Permit Type            Permit Type Definition  \\\n","0  201505065519            4                      sign - erect   \n","1  201604195146            4                      sign - erect   \n","2  201605278609            3  additions alterations or repairs   \n","3  201611072166            8            otc alterations permit   \n","4  201611283529            6                       demolitions   \n","\n","  Permit Creation Date Block  Lot  Street Number Street Number Suffix  \\\n","0           05/06/2015  0326  023            140                  NaN   \n","1           04/19/2016  0306  007            440                  NaN   \n","2           05/27/2016  0595  203           1647                  NaN   \n","3           11/07/2016  0156  011           1230                  NaN   \n","4           11/28/2016  0342  001            950                  NaN   \n","\n","  Street Name Street Suffix  ...  Existing Construction Type  \\\n","0       Ellis            St  ...                         3.0   \n","1       Geary            St  ...                         3.0   \n","2     Pacific            Av  ...                         1.0   \n","3     Pacific            Av  ...                         5.0   \n","4      Market            St  ...                         3.0   \n","\n","  Existing Construction Type Description Proposed Construction Type  \\\n","0                          constr type 3                        NaN   \n","1                          constr type 3                        NaN   \n","2                          constr type 1                        1.0   \n","3                         wood frame (5)                        5.0   \n","4                          constr type 3                        NaN   \n","\n","  Proposed Construction Type Description Site Permit Supervisor District  \\\n","0                                    NaN         NaN                 3.0   \n","1                                    NaN         NaN                 3.0   \n","2                          constr type 1         NaN                 3.0   \n","3                         wood frame (5)         NaN                 3.0   \n","4                                    NaN         NaN                 6.0   \n","\n","  Neighborhoods - Analysis Boundaries  Zipcode  \\\n","0                          Tenderloin  94102.0   \n","1                          Tenderloin  94102.0   \n","2                        Russian Hill  94109.0   \n","3                            Nob Hill  94109.0   \n","4                          Tenderloin  94102.0   \n","\n","                                    Location      Record ID  \n","0  (37.785719256680785, -122.40852313194863)  1380611233945  \n","1   (37.78733980600732, -122.41063199757738)  1420164406718  \n","2    (37.7946573324287, -122.42232562979227)  1424856504716  \n","3   (37.79595867909168, -122.41557405519474)  1443574295566  \n","4   (37.78315261897309, -122.40950883997789)   144548169992  \n","\n","[5 rows x 43 columns]"],"text/html":["\n","  <div id=\"df-1907d8a2-9904-44af-9b90-2998960116f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Permit Number</th>\n","      <th>Permit Type</th>\n","      <th>Permit Type Definition</th>\n","      <th>Permit Creation Date</th>\n","      <th>Block</th>\n","      <th>Lot</th>\n","      <th>Street Number</th>\n","      <th>Street Number Suffix</th>\n","      <th>Street Name</th>\n","      <th>Street Suffix</th>\n","      <th>...</th>\n","      <th>Existing Construction Type</th>\n","      <th>Existing Construction Type Description</th>\n","      <th>Proposed Construction Type</th>\n","      <th>Proposed Construction Type Description</th>\n","      <th>Site Permit</th>\n","      <th>Supervisor District</th>\n","      <th>Neighborhoods - Analysis Boundaries</th>\n","      <th>Zipcode</th>\n","      <th>Location</th>\n","      <th>Record ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>201505065519</td>\n","      <td>4</td>\n","      <td>sign - erect</td>\n","      <td>05/06/2015</td>\n","      <td>0326</td>\n","      <td>023</td>\n","      <td>140</td>\n","      <td>NaN</td>\n","      <td>Ellis</td>\n","      <td>St</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>constr type 3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>Tenderloin</td>\n","      <td>94102.0</td>\n","      <td>(37.785719256680785, -122.40852313194863)</td>\n","      <td>1380611233945</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>201604195146</td>\n","      <td>4</td>\n","      <td>sign - erect</td>\n","      <td>04/19/2016</td>\n","      <td>0306</td>\n","      <td>007</td>\n","      <td>440</td>\n","      <td>NaN</td>\n","      <td>Geary</td>\n","      <td>St</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>constr type 3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>Tenderloin</td>\n","      <td>94102.0</td>\n","      <td>(37.78733980600732, -122.41063199757738)</td>\n","      <td>1420164406718</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>201605278609</td>\n","      <td>3</td>\n","      <td>additions alterations or repairs</td>\n","      <td>05/27/2016</td>\n","      <td>0595</td>\n","      <td>203</td>\n","      <td>1647</td>\n","      <td>NaN</td>\n","      <td>Pacific</td>\n","      <td>Av</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>constr type 1</td>\n","      <td>1.0</td>\n","      <td>constr type 1</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>Russian Hill</td>\n","      <td>94109.0</td>\n","      <td>(37.7946573324287, -122.42232562979227)</td>\n","      <td>1424856504716</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>201611072166</td>\n","      <td>8</td>\n","      <td>otc alterations permit</td>\n","      <td>11/07/2016</td>\n","      <td>0156</td>\n","      <td>011</td>\n","      <td>1230</td>\n","      <td>NaN</td>\n","      <td>Pacific</td>\n","      <td>Av</td>\n","      <td>...</td>\n","      <td>5.0</td>\n","      <td>wood frame (5)</td>\n","      <td>5.0</td>\n","      <td>wood frame (5)</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>Nob Hill</td>\n","      <td>94109.0</td>\n","      <td>(37.79595867909168, -122.41557405519474)</td>\n","      <td>1443574295566</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>201611283529</td>\n","      <td>6</td>\n","      <td>demolitions</td>\n","      <td>11/28/2016</td>\n","      <td>0342</td>\n","      <td>001</td>\n","      <td>950</td>\n","      <td>NaN</td>\n","      <td>Market</td>\n","      <td>St</td>\n","      <td>...</td>\n","      <td>3.0</td>\n","      <td>constr type 3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.0</td>\n","      <td>Tenderloin</td>\n","      <td>94102.0</td>\n","      <td>(37.78315261897309, -122.40950883997789)</td>\n","      <td>144548169992</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 43 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1907d8a2-9904-44af-9b90-2998960116f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1907d8a2-9904-44af-9b90-2998960116f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1907d8a2-9904-44af-9b90-2998960116f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c27a6d42-c70e-42f9-a30c-faee33c185be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c27a6d42-c70e-42f9-a30c-faee33c185be')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c27a6d42-c70e-42f9-a30c-faee33c185be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"sf_permits"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["Does the dataset have any missing values?  Once you have an answer, run the code cell below to get credit for your work."],"metadata":{"id":"YUUwQge8CU1O"}},{"cell_type":"markdown","source":["# 2) How many missing data points do we have?\n","\n","What percentage of the values in the dataset are missing?  Your answer should be a number between 0 and 100.  (If 1/4 of the values in the dataset are missing, the answer is 25.)"],"metadata":{"id":"L3liG5gECU1P"}},{"cell_type":"code","source":[],"metadata":{"id":"_GNNByE7CU1P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# TODO: Your code here!\n","total = np.product(sf_permits.shape)\n","miss = sf_permits.isnull()\n","miss = miss.sum().sum()\n","\n","percent_missing = (miss/total)*100\n"],"metadata":{"execution":{"iopub.status.busy":"2024-02-16T11:49:46.421639Z","iopub.execute_input":"2024-02-16T11:49:46.422038Z","iopub.status.idle":"2024-02-16T11:49:46.922187Z","shell.execute_reply.started":"2024-02-16T11:49:46.422008Z","shell.execute_reply":"2024-02-16T11:49:46.920974Z"},"trusted":true,"id":"T_nQ9woPCU1P","outputId":"ba28ff3a-e3c3-4700-efee-b3ec77e84631"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.16666666666666666, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"2_PercentMissingValues\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}]},{"cell_type":"markdown","source":["# 3) Figure out why the data is missing\n","\n","Look at the columns **\"Street Number Suffix\"** and **\"Zipcode\"** from the [San Francisco Building Permits dataset](https://www.kaggle.com/aparnashastry/building-permit-applications-data). Both of these contain missing values.\n","- Which, if either, are missing because they don't exist?\n","- Which, if either, are missing because they weren't recorded?  \n","\n","Once you have an answer, run the code cell below."],"metadata":{"id":"gvjo7sh8CU1Q"}},{"cell_type":"markdown","source":["# 4) Drop missing values: rows\n","\n","If you removed all of the rows of `sf_permits` with missing values, how many rows are left?\n","\n","**Note**: Do not change the value of `sf_permits` when checking this.  "],"metadata":{"id":"BsvBK5OmCU1T"}},{"cell_type":"code","source":["# TODO: Your code here!\n","\n","sf_permits.dropna().shape[0]\n"],"metadata":{"execution":{"iopub.status.busy":"2024-02-16T11:53:40.356517Z","iopub.execute_input":"2024-02-16T11:53:40.356907Z","iopub.status.idle":"2024-02-16T11:53:40.864833Z","shell.execute_reply.started":"2024-02-16T11:53:40.356878Z","shell.execute_reply":"2024-02-16T11:53:40.86333Z"},"trusted":true,"id":"CznnN0OUCU1T","outputId":"1ff6ea00-4b66-4589-b479-1ad68e3cfe06","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708341221379,"user_tz":-180,"elapsed":1818,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}}},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["Once you have an answer, run the code cell below."],"metadata":{"id":"ByKe6y_LCU1V"}},{"cell_type":"markdown","source":["# 5) Drop missing values: columns\n","\n","Now try removing all the columns with empty values.  \n","- Create a new DataFrame called `sf_permits_with_na_dropped` that has all of the columns with empty values removed.  \n","- How many columns were removed from the original `sf_permits` DataFrame? Use this number to set the value of the `dropped_columns` variable below."],"metadata":{"id":"kIaOm4a7CU1W"}},{"cell_type":"code","source":["# TODO: Your code here\n","sf_permits_with_na_dropped = sf_permits.dropna(axis=1)\n","\n","dropped_columns = sf_permits.shape[1] - sf_permits_with_na_dropped.shape[1]\n","\n"],"metadata":{"execution":{"iopub.status.busy":"2024-02-16T11:55:09.892764Z","iopub.execute_input":"2024-02-16T11:55:09.893411Z","iopub.status.idle":"2024-02-16T11:55:10.424968Z","shell.execute_reply.started":"2024-02-16T11:55:09.893363Z","shell.execute_reply":"2024-02-16T11:55:10.423569Z"},"trusted":true,"id":"z06TOKFSCU1W","outputId":"a42f5644-f16c-43a4-f01e-412862c61563"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.16666666666666666, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"5_DropMissingCols\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}]},{"cell_type":"markdown","source":["# 6) Fill in missing values automatically\n","\n","Try replacing all the NaN's in the `sf_permits` data with the one that comes directly after it and then replacing any remaining NaN's with 0.  Set the result to a new DataFrame `sf_permits_with_na_imputed`."],"metadata":{"id":"zgz_96mSCU1X"}},{"cell_type":"code","source":["# TODO: Your code here\n","sf_permits_with_na_imputed = sf_permits.fillna().fillna(0)"],"metadata":{"id":"ACBu64QdCU1X"},"execution_count":null,"outputs":[]}]}