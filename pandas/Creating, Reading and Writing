{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1252,"sourceType":"datasetVersion","datasetId":655},{"sourceId":3919,"sourceType":"datasetVersion","datasetId":2321},{"sourceId":4877,"sourceType":"datasetVersion","datasetId":2894},{"sourceId":5624,"sourceType":"datasetVersion","datasetId":3491},{"sourceId":8172,"sourceType":"datasetVersion","datasetId":1442},{"sourceId":13206,"sourceType":"datasetVersion","datasetId":9366},{"sourceId":403916,"sourceType":"datasetVersion","datasetId":179555},{"sourceId":466349,"sourceType":"datasetVersion","datasetId":4549},{"sourceId":1151655,"sourceType":"datasetVersion","datasetId":2478},{"sourceId":5438389,"sourceType":"datasetVersion","datasetId":10128}],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/exercise-creating-reading-and-writing-53d019f6-498e-4bcb-8da4-c6a1963dc50c.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240217/auto/storage/goog4_request&X-Goog-Date=20240217T072037Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=0d7284747906ac5f97752f2eba3527eb6f434ce854184486a4da50f14decb72a0c9c52f91a9b9d1ca9c509faaa97fdc3dd95c5d0dd9abf302fa2943e4863671a4789aa4f69c5a399d14fa88988430582ecb8b6c3efa4dd2e1553ba410b46056762287ac15921104f2fdb40721a5a0e1b7ec6b540546ba40e1fd27e2a18e460ebc3b392e6df5dc3d7d0193fe29d99cee65d50a6762405c63441ef326bec764f77fa63093453b90dfc577496deacdacf140b97ba7ea02c4d76f93095f1991f678b389c5b5608eda36e3e091e13d3269fdf846ea814bfd46939be917c23fa1b893653d0775d88fdd3235013d09c38997506bc35e9e5026e669cbbb4e34a512c853b","timestamp":1708154486664}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"code","source":["%cd /content/drive/MyDrive/github_repos/data_analysis"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X1xV6laH-XHl","executionInfo":{"status":"ok","timestamp":1708155273706,"user_tz":-180,"elapsed":9,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}},"outputId":"0ade4668-697b-4712-dd77-b4d2c912184d"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/github_repos/data_analysis\n"]}]},{"source":["\n","# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES\n","# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","\n","import os\n","import sys\n","from tempfile import NamedTemporaryFile\n","from urllib.request import urlopen\n","from urllib.parse import unquote, urlparse\n","from urllib.error import HTTPError\n","from zipfile import ZipFile\n","import tarfile\n","import shutil\n","\n","CHUNK_SIZE = 40960\n","DATA_SOURCE_MAPPING = 'pitchfork-data:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F655%2F1252%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072036Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D217ea7228902349a8232a3f51e358d8b718e153cdda1b9fc8d334244d1667adb227be71d092915622f3a2cc8e55933b9283efdd9e39a5be58c8afc88c6366f96d1535b6927ada944ed7c93e0c85d589f3d26263d764303c46b62f5943c9b4bae8767339c735a1c80c55337bbb0e2c5c6cc84c7ad2abb6ad942519d1944ab826fb61691be7a3cb2026a64104245431fa1878a78ba7bb8ed925e5df2d6004e2aea1f6ed6ed04783cb07e01d0d959bab19c2e94119a78b20e3ca2927a7b058700f0ebcd93bd3b328a3492549f2bb3018910309b3184e7f4c2d99c86f4303d13e7e5afe91875ef0fc358572e0e6858cc603297ad3f9f3dad081162c37f538299422f,chess:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F2321%2F3919%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072036Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D2a4461709a8d3e1944b9dc7debb4bc680079a4fd3a3b39da213cee27c7e5850217090d5e85d4dcef7f752eebd80c0979afd710439ac4556aff95b7a1de4be21b9a71cfcddeb182024a8905b9b10d4ee5f44a7b501dad44b55aefed8bc3d8d22b7c8f61eb4801b7eb917690d16113c326caa1e0f0b82453661b2dd9ea189813e8d8484231f259b65c210bceabf1626b857c9cfc6cc73c450fb2b2e9023897bce026505ff89fb6ef0b22ef29f40cf4c10ef0ad9344e6931bcd1f36e3dd67dc69f75013ab2bc3a9c7e09d2465072f0f3aefb8f16392f47af0bf80fbf97ccc2de2eac08e58fc9079fef0a0b37d13b2e97821924a3a46c15bd7e2fe2e69ad3f2b05ff,kepler-exoplanet-search-results:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F2894%2F4877%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072036Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D4d175cd842aba03842ab62b439e00396fce44d12717835f1d5937d2aee0f1271aee3cfd11760b160cea4961d72e76da9ab84492d4952314dabf06719bc146398df85972658061e12080afb0bd49842af36a7092e83a753c8dff0ecbb91a46222fb87fcb66c52334b2f4f1d78f217d3f752135116a258b970832aa0a8f5fcbb324dfd9ceaef53119664a1a2de82c0857dbf45483915b9acf5a3e04bbda02d52539515e0bebe3c35e90ed3cc2780c49124bd2ff459ebba0b12648793524170fb3b44414f9a6bb841528e6128f8738956e81b1eb3304295bc81910850be280a7e0940b1634c9d4c02dc72c0b2f8492917e3d633b20e972edc5c9d2fc825b6ce8ed4,things-on-reddit:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F3491%2F5624%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072036Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D2aea0b05f29affa5064d53297db4ff4a2df5c46acf2117eb2c2ccb34784d948e683c882e43f48a5bb067bb1c96ea1a28e3045f931d141ab1093a9ab5ff3856d10b40008fe12ff0305503c102404375c2893af11135b198f2073f158ae5289645b870bae8298a9474883c651152e2338ae0614257d706e1b95eac6e2411c0fab095d86c00ba87fc350c1236c428020dbe544af9c4bbc2c454b0a4645a78ac89a00c7b238971381fc6bd2ff93cf4529b41fb0b5ad3c1f5c88c3710d0ef1a8fe198785c0f52f9b1e54188dc746c596c5079a91906b5beb6ff72a838c07c68962b08eee547476e8d3361b0e43f57727c5b86f9edc3835cf19b4b2ee20707a724b963,wine-reviews:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F1442%2F8172%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072037Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D6e990fb4308ade277a30ef9f0a1653cd5ac88e564f055f2696962be244a373fc8e1195845a60862c5fc0ca034696432b36bf338b1ebb66999150e8be3e3518e51cd98282eb02a1fadef49e23ca95b077d4d591715126004e44ead394e08f86ec44603642362b7f93f9ff641aa5b777a3112727a1fc53bf045aeb60462b409e270c1e7df61c83b075953db50d7140525d77b9d3175787b56f96fe70301873edacda5ad536009e8474b3f34ddacd9313f15f1a13f22ccce492456413e491a554264711cb454a9cfacfeb104672803e06e2a3ca6a9686010eeda8f543586f8ca80b0e374c8e296b2adb5566e98c128a012c6060ce83bc0e038046f69e222c58227b,ramen-ratings:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F9366%2F13206%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072037Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D455f06e8204f0c8fe657385673cf8eb5566256f2174e17ecd596c532e4d90de5047fc64981b254edc211d31597cda522602b5879d8cdad9fb506d070d716059342eaf67b46b9bd465de69052477abc4ca4d450441164fb8c273ed19b7cee04686690cc9c474a916c580c34bf5d186888200e9eccb84acc41e2ead5fe739dafb549b8817d1ad4092c57fef85d1352c49a6367fb527df8016cc7f3bbcf86498b59fbaa077df0d0710ef78c8063c352791c4087a4f07e3822eb5e1da2d2f825b227de81c34b66561af85856e45fea651140296ebb642a21b49c56b1a1a66fcffe00017b8639f1b06e8eea0ff16f19c5804104469ed0674268da5b02e8b2822ef016,powerlifting-database:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F179555%2F403916%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072037Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D0ece4aafa8e62f06bd90ffa619b5cbc59a6c540b8f3e0aeb0f433a6c1ec58574e44296a043cc1736cf959607ac3679ce1e71cf79feb05dc30770b3f764148a0cb3faeb8f5a76c360d5942c7ccc7fdd6ebf7715d618b2477de10b2e52e598e12fab217b8d48679ac1de098aed6a08838ce992c666795a5d9e1b0edc8beebf5797df7424fad36a05c28d4a6b41d85105bafb772567d071c59a59353e773c6287fc5fa89ba09246478f8097075dd58e46c8e3b9a5394d1ebeb6227b46c87e3e7776c40eb70cb071ed84cd3e263e6e6e6dd8266c12d71f5c6f53aeca2caaedbda70dd66efc0051bdd764667c4f8af9283bd3a7f1aefc0e2bc7da3d35834504c9ded4,youtube-new:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F4549%2F466349%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072037Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D60f29e5f6c41353ff3a8e3ff478178dc1c77db74f3cbe37d077b894784c4c28d79738a482449db60babbb364186e84ee8849065f254a0438e089fa0c21d3ea8eab3336cf290575c15c95a69829efb6e1d7f5ece6ccde539d62c53cd71074b1e8162363e732832b14f06b86132c58c212ba9290a6778f2d8761ac55649f89db8663bb6e43da00d909aea5f8036b6cefd740057be927241d109a448f95b4d341edd9eb84f4f205176afdcbc560fcff2bb2d507be3d244b96e2ebc0a75e3abc11fef9d6cafa348b57a19d636aa5a42e89339fef3d959f83040da0ebf194d903d6e90913771017c5613f68d9ef17a8f06ad9fa1339ac4150c739446bde2be6f5c398,188-million-us-wildfires:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F2478%2F1151655%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072037Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D959a5276e1055d5d50963eda9aac130634013c0052d91b465571660a41aef744f74003a4d569b59b932f37a95e36be7661051f1e44298a314c8469f563dfa32e827e11ef18c7d611c9cce68def5cd5db6b2151d9a06ba8f8a66e438bfcd7d26a625f40ce8edd3e8475669d796fee31936c331291cfaea69ee7c40912c70d75b70bc31f972fa20eec631adfe00b603923a086adb63413d1345feaefcb118c935201fb50404a2dde85723a86676f0948751b2a1147f790d61153ea41f9bb16d05a68322894e5182f3558c5907d6ff7ad4eace9d03360b5cdda6535dd12ceca9256af622626ea94a12c9a7738d5522d3ea829f9176d927df396d5835c3c5d82ad87,publicassistance:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F10128%2F5438389%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240217%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240217T072037Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D931c9716d7f13babcde228f28bee49cc1f368233466f5b5f0966decba7fb3968b7fe9b883e34c27085956215cde1e5011380ceb0fc91af268bc4e12222dd8e51e8cfcb27fca5ea047d993975be4d0c5ea173a13f55e5cce150a5d54e62743239a9e161850927f84de4fe03252b1180d0b0cff494587126ceb4a8f0743ee7429ef1acc9fdf3d8ee4103cec36325c67ca0602f32ef7ada734a0e7bd7c0ccb67b3e9a5f9e99466081971ea25cc24fe0b32c523936fb32f360ee962af3ccc4531107f0e9d455aed779ee90db6ba67d1fc5c8da97fd04679c57037454f5bcc986c91cd3c450a563f68dc27cb9f6d6931f69d3f4e5cfd1da0a262e49d5542794acc3ef'\n","\n","KAGGLE_INPUT_PATH='/kaggle/input'\n","KAGGLE_WORKING_PATH='/kaggle/working'\n","KAGGLE_SYMLINK='kaggle'\n","\n","!umount /kaggle/input/ 2> /dev/null\n","shutil.rmtree('/kaggle/input', ignore_errors=True)\n","os.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)\n","os.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)\n","\n","try:\n","  os.symlink(KAGGLE_INPUT_PATH, os.path.join(\"/content/drive/MyDrive/github_repos/data_analysis\", 'input'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","try:\n","  os.symlink(KAGGLE_WORKING_PATH, os.path.join(\"/content/drive/MyDrive/github_repos/data_analysis\", 'working'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","\n","for data_source_mapping in DATA_SOURCE_MAPPING.split(','):\n","    directory, download_url_encoded = data_source_mapping.split(':')\n","    download_url = unquote(download_url_encoded)\n","    filename = urlparse(download_url).path\n","    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)\n","    try:\n","        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:\n","            total_length = fileres.headers['content-length']\n","            print(f'Downloading {directory}, {total_length} bytes compressed')\n","            dl = 0\n","            data = fileres.read(CHUNK_SIZE)\n","            while len(data) > 0:\n","                dl += len(data)\n","                tfile.write(data)\n","                done = int(50 * dl / int(total_length))\n","                sys.stdout.write(f\"\\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded\")\n","                sys.stdout.flush()\n","                data = fileres.read(CHUNK_SIZE)\n","            if filename.endswith('.zip'):\n","              with ZipFile(tfile) as zfile:\n","                zfile.extractall(destination_path)\n","            else:\n","              with tarfile.open(tfile.name) as tarfile:\n","                tarfile.extractall(destination_path)\n","            print(f'\\nDownloaded and uncompressed: {directory}')\n","    except HTTPError as e:\n","        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')\n","        continue\n","    except OSError as e:\n","        print(f'Failed to load {download_url} to path {destination_path}')\n","        continue\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"PQ9W97Q98E5I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708155358228,"user_tz":-180,"elapsed":60518,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}},"outputId":"2d47ea3a-902a-4ec1-9a11-ddd0fff07285"},"cell_type":"code","outputs":[{"output_type":"stream","name":"stdout","text":["Downloading pitchfork-data, 34891456 bytes compressed\n","[==================================================] 34891456 bytes downloaded\n","Downloaded and uncompressed: pitchfork-data\n","Downloading chess, 2903760 bytes compressed\n","[==================================================] 2903760 bytes downloaded\n","Downloaded and uncompressed: chess\n","Downloading kepler-exoplanet-search-results, 1215549 bytes compressed\n","[==================================================] 1215549 bytes downloaded\n","Downloaded and uncompressed: kepler-exoplanet-search-results\n","Downloading things-on-reddit, 16773230 bytes compressed\n","[==================================================] 16773230 bytes downloaded\n","Downloaded and uncompressed: things-on-reddit\n","Downloading wine-reviews, 53336293 bytes compressed\n","[==================================================] 53336293 bytes downloaded\n","Downloaded and uncompressed: wine-reviews\n","Downloading ramen-ratings, 40762 bytes compressed\n","[==================================================] 40762 bytes downloaded\n","Downloaded and uncompressed: ramen-ratings\n","Downloading powerlifting-database, 9277600 bytes compressed\n","[==================================================] 9277600 bytes downloaded\n","Downloaded and uncompressed: powerlifting-database\n","Downloading youtube-new, 210575746 bytes compressed\n","[==================================================] 210575746 bytes downloaded\n","Downloaded and uncompressed: youtube-new\n","Downloading 188-million-us-wildfires, 176270559 bytes compressed\n","[==================================================] 176270559 bytes downloaded\n","Downloaded and uncompressed: 188-million-us-wildfires\n","Downloading publicassistance, 304041 bytes compressed\n","[==================================================] 304041 bytes downloaded\n","Downloaded and uncompressed: publicassistance\n","Data source import complete.\n"]}],"execution_count":23},{"cell_type":"markdown","source":["**This notebook is an exercise in the [Pandas](https://www.kaggle.com/learn/pandas) course.  You can reference the tutorial at [this link](https://www.kaggle.com/residentmario/creating-reading-and-writing).**\n","\n","---\n"],"metadata":{"id":"RlHWCGVW8E5P"}},{"cell_type":"markdown","source":["# Introduction\n","\n","The first step in most data analytics projects is reading the data file. In this exercise, you'll create Series and DataFrame objects, both by hand and by reading data files.\n","\n","Run the code cell below to load libraries you will need (including code to check your answers)."],"metadata":{"id":"evrSm6pP8E5T"}},{"cell_type":"code","source":["import pandas as pd\n"],"metadata":{"execution":{"iopub.status.busy":"2024-02-14T08:51:07.805134Z","iopub.execute_input":"2024-02-14T08:51:07.805506Z","iopub.status.idle":"2024-02-14T08:51:09.772634Z","shell.execute_reply.started":"2024-02-14T08:51:07.805478Z","shell.execute_reply":"2024-02-14T08:51:09.771307Z"},"trusted":true,"id":"zcvZiUuF8E5U","executionInfo":{"status":"ok","timestamp":1708154752082,"user_tz":-180,"elapsed":270,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# Exercises"],"metadata":{"id":"iHJGP9eX8E5a"}},{"cell_type":"markdown","source":["## 1.\n","\n","In the cell below, create a DataFrame `fruits` that looks like this:\n","\n","![](https://storage.googleapis.com/kaggle-media/learn/images/Ax3pp2A.png)"],"metadata":{"id":"Pv5ksxCJ8E5b"}},{"cell_type":"code","source":["# Your code goes here. Create a dataframe matching the above diagram and assign it to the variable fruits.\n","fruits = pd.DataFrame({\"Apples\" : [30], \"Bananas\" : [21]})\n","\n","fruits"],"metadata":{"execution":{"iopub.status.busy":"2024-02-14T08:52:49.359707Z","iopub.execute_input":"2024-02-14T08:52:49.360791Z","iopub.status.idle":"2024-02-14T08:52:49.385077Z","shell.execute_reply.started":"2024-02-14T08:52:49.360742Z","shell.execute_reply":"2024-02-14T08:52:49.384082Z"},"trusted":true,"id":"LAfSJxsP8E5b","outputId":"77c7314d-fc10-458c-998e-0f8eccb62828","colab":{"base_uri":"https://localhost:8080/","height":89},"executionInfo":{"status":"ok","timestamp":1708154777360,"user_tz":-180,"elapsed":885,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}}},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Apples  Bananas\n","0      30       21"],"text/html":["\n","  <div id=\"df-ae3b3c41-da7b-4874-bc8c-94a47d0fe3b3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Apples</th>\n","      <th>Bananas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>30</td>\n","      <td>21</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae3b3c41-da7b-4874-bc8c-94a47d0fe3b3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ae3b3c41-da7b-4874-bc8c-94a47d0fe3b3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ae3b3c41-da7b-4874-bc8c-94a47d0fe3b3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_d71bd3f3-6504-4c60-90a2-ea9c5b5eee18\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('fruits')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d71bd3f3-6504-4c60-90a2-ea9c5b5eee18 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('fruits');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"fruits","repr_error":"cannot convert float NaN to integer"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["## 2.\n","\n","Create a dataframe `fruit_sales` that matches the diagram below:\n","\n","![](https://storage.googleapis.com/kaggle-media/learn/images/CHPn7ZF.png)"],"metadata":{"id":"vdPUnEl38E5f"}},{"cell_type":"code","source":["# Your code goes here. Create a dataframe matching the above diagram and assign it to the variable fruit_sales.\n","fruit_sales = pd.DataFrame({\"Apples\" : [35,41], \"Bananas\" : [21,34]}, index = [\"2017 Sales\", \"2018 Sales\"])\n","\n","fruit_sales"],"metadata":{"execution":{"iopub.status.busy":"2024-02-14T08:54:15.637716Z","iopub.execute_input":"2024-02-14T08:54:15.638104Z","iopub.status.idle":"2024-02-14T08:54:15.65576Z","shell.execute_reply.started":"2024-02-14T08:54:15.638077Z","shell.execute_reply":"2024-02-14T08:54:15.654473Z"},"trusted":true,"id":"wWvxb_M08E5g","outputId":"1f2a02bc-78a3-456f-eb5a-466d1b8ca20c","colab":{"base_uri":"https://localhost:8080/","height":125},"executionInfo":{"status":"ok","timestamp":1708154795805,"user_tz":-180,"elapsed":341,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}}},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Apples  Bananas\n","2017 Sales      35       21\n","2018 Sales      41       34"],"text/html":["\n","  <div id=\"df-e3600ff6-a4bd-4483-b6e3-00230e35e495\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Apples</th>\n","      <th>Bananas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2017 Sales</th>\n","      <td>35</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>2018 Sales</th>\n","      <td>41</td>\n","      <td>34</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3600ff6-a4bd-4483-b6e3-00230e35e495')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e3600ff6-a4bd-4483-b6e3-00230e35e495 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e3600ff6-a4bd-4483-b6e3-00230e35e495');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-382033b5-b4e6-4467-8c6a-b44bc4af6f17\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-382033b5-b4e6-4467-8c6a-b44bc4af6f17')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-382033b5-b4e6-4467-8c6a-b44bc4af6f17 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5ffea939-ea0c-4732-8da3-70d428fceb21\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('fruit_sales')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5ffea939-ea0c-4732-8da3-70d428fceb21 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('fruit_sales');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"fruit_sales","summary":"{\n  \"name\": \"fruit_sales\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Apples\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 35,\n        \"max\": 41,\n        \"samples\": [\n          41,\n          35\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Bananas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 21,\n        \"max\": 34,\n        \"samples\": [\n          34,\n          21\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["## 3.\n","\n","Create a variable `ingredients` with a Series that looks like:\n","\n","```\n","Flour     4 cups\n","Milk       1 cup\n","Eggs     2 large\n","Spam       1 can\n","Name: Dinner, dtype: object\n","```"],"metadata":{"id":"-BOqGGF38E5h"}},{"cell_type":"code","source":["ingredients = pd.Series([\"4 cups\", \"1 cup\", \"2 large\", \"1 can\"], index=[\"Flour\", \"Milk\", \"Eggs\", \"Spam\"], name=\"Dinner\")\n","\n","ingredients"],"metadata":{"execution":{"iopub.status.busy":"2024-02-14T08:55:55.336443Z","iopub.execute_input":"2024-02-14T08:55:55.336833Z","iopub.status.idle":"2024-02-14T08:55:55.351661Z","shell.execute_reply.started":"2024-02-14T08:55:55.336805Z","shell.execute_reply":"2024-02-14T08:55:55.350483Z"},"trusted":true,"id":"LabvUtP68E5i","outputId":"6df4fad6-55ea-4747-cc47-9db6f04985be","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708154809709,"user_tz":-180,"elapsed":277,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}}},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Flour     4 cups\n","Milk       1 cup\n","Eggs     2 large\n","Spam       1 can\n","Name: Dinner, dtype: object"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["## 4.\n","\n","Read the following csv dataset of wine reviews into a DataFrame called `reviews`:\n","\n","![](https://storage.googleapis.com/kaggle-media/learn/images/74RCZtU.png)\n","\n","The filepath to the csv file is `../input/wine-reviews/winemag-data_first150k.csv`. The first few lines look like:\n","\n","```\n",",country,description,designation,points,price,province,region_1,region_2,variety,winery\n","0,US,\"This tremendous 100% varietal wine[...]\",Martha's Vineyard,96,235.0,California,Napa Valley,Napa,Cabernet Sauvignon,Heitz\n","1,Spain,\"Ripe aromas of fig, blackberry and[...]\",Carodorum Selección Especial Reserva,96,110.0,Northern Spain,Toro,,Tinta de Toro,Bodega Carmen Rodríguez\n","```"],"metadata":{"id":"rbDMrgSt8E5j"}},{"cell_type":"code","source":["reviews = pd.read_csv(\"/content/drive/MyDrive/github_repos/data_analysis/input/wine-reviews/winemag-data_first150k.csv\", index_col=0)\n","\n","\n","reviews"],"metadata":{"execution":{"iopub.status.busy":"2024-02-14T08:57:47.188088Z","iopub.execute_input":"2024-02-14T08:57:47.188454Z","iopub.status.idle":"2024-02-14T08:57:48.196272Z","shell.execute_reply.started":"2024-02-14T08:57:47.188426Z","shell.execute_reply":"2024-02-14T08:57:48.195069Z"},"trusted":true,"id":"xwXBrvRZ8E5j","outputId":"638ac1bf-c782-4e7c-e638-e777d1a05b31","colab":{"base_uri":"https://localhost:8080/","height":374},"executionInfo":{"status":"ok","timestamp":1708155430220,"user_tz":-180,"elapsed":1416,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}}},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       country                                        description  \\\n","0           US  This tremendous 100% varietal wine hails from ...   \n","1        Spain  Ripe aromas of fig, blackberry and cassis are ...   \n","...        ...                                                ...   \n","150928  France  A perfect salmon shade, with scents of peaches...   \n","150929   Italy  More Pinot Grigios should taste like this. A r...   \n","\n","                                 designation  points  price  \\\n","0                          Martha's Vineyard      96  235.0   \n","1       Carodorum Selección Especial Reserva      96  110.0   \n","...                                      ...     ...    ...   \n","150928                       Grand Brut Rosé      90   52.0   \n","150929                                   NaN      90   15.0   \n","\n","                  province     region_1 region_2             variety  \\\n","0               California  Napa Valley     Napa  Cabernet Sauvignon   \n","1           Northern Spain         Toro      NaN       Tinta de Toro   \n","...                    ...          ...      ...                 ...   \n","150928           Champagne    Champagne      NaN     Champagne Blend   \n","150929  Northeastern Italy   Alto Adige      NaN        Pinot Grigio   \n","\n","                         winery  \n","0                         Heitz  \n","1       Bodega Carmen Rodríguez  \n","...                         ...  \n","150928                   Gosset  \n","150929            Alois Lageder  \n","\n","[150930 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-406e42f5-c536-4f5f-9512-e8e00e8e84a1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>description</th>\n","      <th>designation</th>\n","      <th>points</th>\n","      <th>price</th>\n","      <th>province</th>\n","      <th>region_1</th>\n","      <th>region_2</th>\n","      <th>variety</th>\n","      <th>winery</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>US</td>\n","      <td>This tremendous 100% varietal wine hails from ...</td>\n","      <td>Martha's Vineyard</td>\n","      <td>96</td>\n","      <td>235.0</td>\n","      <td>California</td>\n","      <td>Napa Valley</td>\n","      <td>Napa</td>\n","      <td>Cabernet Sauvignon</td>\n","      <td>Heitz</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Spain</td>\n","      <td>Ripe aromas of fig, blackberry and cassis are ...</td>\n","      <td>Carodorum Selección Especial Reserva</td>\n","      <td>96</td>\n","      <td>110.0</td>\n","      <td>Northern Spain</td>\n","      <td>Toro</td>\n","      <td>NaN</td>\n","      <td>Tinta de Toro</td>\n","      <td>Bodega Carmen Rodríguez</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>150928</th>\n","      <td>France</td>\n","      <td>A perfect salmon shade, with scents of peaches...</td>\n","      <td>Grand Brut Rosé</td>\n","      <td>90</td>\n","      <td>52.0</td>\n","      <td>Champagne</td>\n","      <td>Champagne</td>\n","      <td>NaN</td>\n","      <td>Champagne Blend</td>\n","      <td>Gosset</td>\n","    </tr>\n","    <tr>\n","      <th>150929</th>\n","      <td>Italy</td>\n","      <td>More Pinot Grigios should taste like this. A r...</td>\n","      <td>NaN</td>\n","      <td>90</td>\n","      <td>15.0</td>\n","      <td>Northeastern Italy</td>\n","      <td>Alto Adige</td>\n","      <td>NaN</td>\n","      <td>Pinot Grigio</td>\n","      <td>Alois Lageder</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150930 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-406e42f5-c536-4f5f-9512-e8e00e8e84a1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-406e42f5-c536-4f5f-9512-e8e00e8e84a1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-406e42f5-c536-4f5f-9512-e8e00e8e84a1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0700fa15-8e63-4f98-9df4-a9e72500aebf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0700fa15-8e63-4f98-9df4-a9e72500aebf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0700fa15-8e63-4f98-9df4-a9e72500aebf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4fa2ccaa-24cf-4f57-8013-5b9b5c276554\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('reviews')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4fa2ccaa-24cf-4f57-8013-5b9b5c276554 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('reviews');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"reviews"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_O_Xw5ot974n","executionInfo":{"status":"ok","timestamp":1708154969121,"user_tz":-180,"elapsed":31499,"user":{"displayName":"Halit Ince","userId":"10018985644071223184"}},"outputId":"60235e9b-d1a9-4a99-914b-9d7786a220cd"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["q4.hint()\n","q4.solution()"],"metadata":{"execution":{"iopub.status.busy":"2024-02-14T08:57:36.80157Z","iopub.execute_input":"2024-02-14T08:57:36.801956Z","iopub.status.idle":"2024-02-14T08:57:36.815569Z","shell.execute_reply.started":"2024-02-14T08:57:36.801929Z","shell.execute_reply":"2024-02-14T08:57:36.814481Z"},"trusted":true,"id":"17fWZ3vW8E5k","outputId":"f2294391-e4bf-4f77-f8cf-066983a8d10d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 2, \"questionType\": 1, \"questionId\": \"4_ReadWineCsv\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Hint: Note that the csv file begins with an unnamed column of increasing integers. We want this to be used as the index. Check out the description of the `index_col` keyword argument in [the docs for `read_csv`](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html).","text/markdown":"<span style=\"color:#3366cc\">Hint:</span> Note that the csv file begins with an unnamed column of increasing integers. We want this to be used as the index. Check out the description of the `index_col` keyword argument in [the docs for `read_csv`](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html)."},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 1, \"questionId\": \"4_ReadWineCsv\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Solution: \n```python\nreviews = pd.read_csv('../input/wine-reviews/winemag-data_first150k.csv', index_col=0)\n```","text/markdown":"<span style=\"color:#33cc99\">Solution:</span> \n```python\nreviews = pd.read_csv('../input/wine-reviews/winemag-data_first150k.csv', index_col=0)\n```"},"metadata":{}}]},{"cell_type":"markdown","source":["## 5.\n","\n","Run the cell below to create and display a DataFrame called `animals`:"],"metadata":{"id":"Epr4pnte8E5k"}},{"cell_type":"code","source":["animals = pd.DataFrame({'Cows': [12, 20], 'Goats': [22, 19]}, index=['Year 1', 'Year 2'])\n","animals"],"metadata":{"execution":{"iopub.status.busy":"2024-02-14T08:58:04.056495Z","iopub.execute_input":"2024-02-14T08:58:04.056897Z","iopub.status.idle":"2024-02-14T08:58:04.068119Z","shell.execute_reply.started":"2024-02-14T08:58:04.056867Z","shell.execute_reply":"2024-02-14T08:58:04.066791Z"},"trusted":true,"id":"SEn46Mql8E5l","outputId":"15c7da24-e6f3-489f-f45b-38be81295d49"},"execution_count":null,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"        Cows  Goats\nYear 1    12     22\nYear 2    20     19","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Cows</th>\n      <th>Goats</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Year 1</th>\n      <td>12</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>Year 2</th>\n      <td>20</td>\n      <td>19</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":["In the cell below, write code to save this DataFrame to disk as a csv file with the name `cows_and_goats.csv`."],"metadata":{"id":"DUjmDidX8E5l"}},{"cell_type":"code","source":["# Your code goes here\n","pd.to_csv(animals, name= \"cows_and_goats.csv\")\n","# Check your answer\n","q5.check()"],"metadata":{"id":"-VT_jnM78E5l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["q5.hint()\n","#q5.solution()"],"metadata":{"execution":{"iopub.status.busy":"2024-02-14T08:58:51.341596Z","iopub.execute_input":"2024-02-14T08:58:51.341953Z","iopub.status.idle":"2024-02-14T08:58:51.35104Z","shell.execute_reply.started":"2024-02-14T08:58:51.341926Z","shell.execute_reply":"2024-02-14T08:58:51.349865Z"},"trusted":true,"id":"FMEzAm148E5m","outputId":"3baf3bb5-47a1-424d-8599-1301759f3ab9"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 2, \"questionType\": 2, \"questionId\": \"5_SaveAnimalsCsv\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Hint: Use [`to_csv`](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html) to save a DataFrame to a CSV file.","text/markdown":"<span style=\"color:#3366cc\">Hint:</span> Use [`to_csv`](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html) to save a DataFrame to a CSV file."},"metadata":{}}]},{"cell_type":"markdown","source":["# Keep going\n","\n","Move on to learn about **[indexing, selecting and assigning](https://www.kaggle.com/residentmario/indexing-selecting-assigning)**."],"metadata":{"id":"dy5oxLPg8E5m"}},{"cell_type":"markdown","source":["---\n","\n","\n","\n","\n","*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/pandas/discussion) to chat with other learners.*"],"metadata":{"id":"5muHeqlY8E5m"}}]}